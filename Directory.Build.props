<?xml version="1.0" encoding="utf-8"?>
<Project>
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <RepoRootPath>$(MSBuildThisFileDirectory)</RepoRootPath>
    <RepoRootRelativePath>$([MSBuild]::MakeRelative($(MSBuildProjectDirectory), $(RepoRootPath)))</RepoRootRelativePath>
    <BaseIntermediateOutputPath Condition=" '$(BaseIntermediateOutputPath)' == '' ">$(RepoRootRelativePath)obj\$([MSBuild]::MakeRelative($(RepoRootPath), $(MSBuildProjectDirectory)))\</BaseIntermediateOutputPath>
    <BaseOutputPath Condition=" '$(BaseOutputPath)' == '' ">$(RepoRootRelativePath)bin\$(MSBuildProjectName)\</BaseOutputPath>
    <PackageOutputPath>$(RepoRootPath)bin\Packages\$(Configuration)\NuGet\</PackageOutputPath>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <AnalysisLevel>latest</AnalysisLevel>
    <EnforceCodeStyleInBuild>true</EnforceCodeStyleInBuild>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <ProduceReferenceAssembly>true</ProduceReferenceAssembly>

    <!-- It's OK to reference assemblies without a strong name, because .NET doesn't care. -->
    <NoWarn>$(NoWarn);CS8002</NoWarn>

    <!-- https://learn.microsoft.com/en-us/dotnet/fundamentals/apicompat/package-validation/overview -->
    <EnablePackageValidation>true</EnablePackageValidation>

    <!-- https://github.com/dotnet/msbuild/blob/main/documentation/ProjectReference-Protocol.md#setplatform-negotiation -->
    <EnableDynamicPlatformResolution>true</EnableDynamicPlatformResolution>

    <!-- Opt in till https://github.com/NuGet/Home/issues/9803 makes this the default. -->
    <RestoreUseStaticGraphEvaluation>true</RestoreUseStaticGraphEvaluation>

    <!-- This entire repo has just one version.json file, so compute the version once and share with all projects in a large build. -->
    <GitVersionBaseDirectory>$(MSBuildThisFileDirectory)</GitVersionBaseDirectory>

    <!-- Local builds should embed PDBs so we never lose them when a subsequent build occurs. -->
    <DebugType Condition=" '$(CI)' != 'true' and '$(TF_BUILD)' != 'true' ">embedded</DebugType>

    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>$(MSBuildThisFileDirectory)strongname.snk</AssemblyOriginatorKeyFile>

    <PackageProjectUrl>https://github.com/aarnott/Nerdbank.Cryptocurrencies</PackageProjectUrl>
    <Company>IronPigeon, LLC</Company>
    <Authors>Andrew Arnott</Authors>
    <Copyright>Â© IronPigeon, LLC. All rights reserved.</Copyright>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <IncludeSymbols Condition=" '$(DebugType)' != 'embedded' ">true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>

    <CI Condition="'$(TF_BUILD)'=='true'">true</CI>
  </PropertyGroup>

  <PropertyGroup>
    <RidOsPrefix Condition="$([MSBuild]::IsOsPlatform('Windows'))">win</RidOsPrefix>
    <RidOsPrefix Condition="$([MSBuild]::IsOsPlatform('Linux'))">linux</RidOsPrefix>
    <RidOsPrefix Condition="$([MSBuild]::IsOsPlatform('OSX'))">osx</RidOsPrefix>

    <RidOsArchitecture Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)' == 'x64'">x64</RidOsArchitecture>
    <RidOsArchitecture Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)' == 'ARM64'">arm64</RidOsArchitecture>

    <AvailableRuntimeIdentifiers>$(RidOsPrefix)-arm64;$(RidOsPrefix)-x64</AvailableRuntimeIdentifiers>
    <DefaultRuntimeIdentifier>$(RidOsPrefix)-$(RidOsArchitecture)</DefaultRuntimeIdentifier>
  </PropertyGroup>

  <PropertyGroup>
    <LangVersion Condition="'$(MSBuildProjectExtension)'=='.csproj'">13</LangVersion>
    <LangVersion Condition="'$(MSBuildProjectExtension)'=='.vbproj'">16.9</LangVersion>
  </PropertyGroup>

  <ItemGroup>
    <AdditionalFiles Include="$(MSBuildThisFileDirectory)stylecop.json" Link="stylecop.json" />
  </ItemGroup>

  <ItemDefinitionGroup>
    <!-- We always want MSBuild properties generated that point at the restored location of each package. -->
    <PackageReference GeneratePathProperty="true" />
  </ItemDefinitionGroup>

  <Target Name="PrepareReleaseNotes" BeforeTargets="GenerateNuspec" DependsOnTargets="GetBuildVersion">
    <PropertyGroup>
      <PackageReleaseNotes Condition="'$(RepositoryUrl)'!=''">$(RepositoryUrl)/releases/tag/v$(Version)</PackageReleaseNotes>
    </PropertyGroup>
  </Target>
</Project>
